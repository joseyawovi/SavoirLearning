# Generated by Django 5.2.3 on 2025-06-14 09:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Roadmap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('title_fr', models.CharField(blank=True, max_length=200, verbose_name='Title (French)')),
                ('description', models.TextField(verbose_name='Description')),
                ('description_fr', models.TextField(blank=True, verbose_name='Description (French)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Roadmap',
                'verbose_name_plural': 'Roadmaps',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_paid_user', models.BooleanField(default=False, verbose_name='Is Paid User')),
                ('trial_start_date', models.DateTimeField(auto_now_add=True, verbose_name='Trial Start Date')),
                ('trial_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Trial End Date')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('currency', models.CharField(default='XOF', max_length=3, verbose_name='Currency')),
                ('payment_method', models.CharField(max_length=50, verbose_name='Payment Method')),
                ('transaction_id', models.CharField(max_length=100, unique=True, verbose_name='Transaction ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('successful', 'Successful'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('title_fr', models.CharField(blank=True, max_length=200, verbose_name='Title (French)')),
                ('description', models.TextField(verbose_name='Description')),
                ('description_fr', models.TextField(blank=True, verbose_name='Description (French)')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('prerequisite_room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.room', verbose_name='Prerequisite Room')),
                ('roadmap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='lms.roadmap', verbose_name='Roadmap')),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Rooms',
                'ordering': ['roadmap', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('title_fr', models.CharField(blank=True, max_length=200, verbose_name='Title (French)')),
                ('content', models.TextField(verbose_name='Content')),
                ('content_fr', models.TextField(blank=True, verbose_name='Content (French)')),
                ('video_url', models.URLField(blank=True, verbose_name='Video URL')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='lms.room', verbose_name='Room')),
            ],
            options={
                'verbose_name': 'Section',
                'verbose_name_plural': 'Sections',
                'ordering': ['room', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('section', 'Section Quiz'), ('final', 'Final Exam')], max_length=10, verbose_name='Question Type')),
                ('prompt', models.TextField(verbose_name='Question Prompt')),
                ('prompt_fr', models.TextField(blank=True, verbose_name='Question Prompt (French)')),
                ('correct_answer', models.CharField(max_length=500, verbose_name='Correct Answer')),
                ('placeholder_hint', models.CharField(blank=True, help_text='Show placeholder like "_____ _____" to indicate answer format', max_length=100, verbose_name='Placeholder Hint')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='final_questions', to='lms.room', verbose_name='Room (for final exam)')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='lms.section', verbose_name='Section')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['section', 'room', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_id', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='Certificate ID')),
                ('issued_at', models.DateTimeField(auto_now_add=True, verbose_name='Issued At')),
                ('is_valid', models.BooleanField(default=True, verbose_name='Is Valid')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.room', verbose_name='Room')),
            ],
            options={
                'verbose_name': 'Certificate',
                'verbose_name_plural': 'Certificates',
                'unique_together': {('user', 'room')},
            },
        ),
        migrations.CreateModel(
            name='RoomCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Is Completed')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('final_exam_score', models.FloatField(blank=True, null=True, verbose_name='Final Exam Score')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.room', verbose_name='Room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Room Completion',
                'verbose_name_plural': 'Room Completions',
                'unique_together': {('user', 'room')},
            },
        ),
        migrations.CreateModel(
            name='SectionCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Is Completed')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.section', verbose_name='Section')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Section Completion',
                'verbose_name_plural': 'Section Completions',
                'unique_together': {('user', 'section')},
            },
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=500, verbose_name='Answer')),
                ('is_correct', models.BooleanField(verbose_name='Is Correct')),
                ('answered_at', models.DateTimeField(auto_now_add=True, verbose_name='Answered At')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.question', verbose_name='Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Answer',
                'verbose_name_plural': 'User Answers',
                'unique_together': {('user', 'question')},
            },
        ),
    ]
